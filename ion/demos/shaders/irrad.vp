/**
Copyright 2017 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS-IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/

attribute vec3 aVertex;
attribute vec2 aTexCoords;

varying vec2 vTexCoords;
varying vec4 vShadowPos;
varying vec3 vToLight;
varying vec3 vToCamera;
varying vec3 vPosition;

// Matrix used to compute depth.
uniform mat4 uProjectionMatrix;
uniform mat4 uModelviewMatrix;
uniform mat4 uBiasMatrix;

void main() {
  vec4 vertex = vec4(aVertex, 1.);

  vShadowPos = uBiasMatrix * vertex;
  vPosition = aVertex;
  vTexCoords = aTexCoords;

  gl_Position = uProjectionMatrix * uModelviewMatrix * vertex;
}
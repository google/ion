/**
Copyright 2017 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS-IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/

uniform mat4 uProjectionMatrix;
uniform mat4 uModelviewMatrix;

attribute vec3 aVertex;
varying vec3 vCubeMapVector;

// There are two important things happening in this shader:
// 2. We set the W coordinate of the vertex to zero instead of one. This
//    effectively puts it infinitely far away and we avoid any perspective
//    errors associated with rendering a cube map on a finite-size skybox.
// 1. We set the Z coordinate to the W coordinate after transforming, so that
//    after division Z will be equal to 1. This puts the skybox behind any
//    other objects in the scene.

void main(void) {
  vCubeMapVector = aVertex;
  gl_Position = (uProjectionMatrix * uModelviewMatrix *
      vec4(aVertex, 0)).xyww;
}
